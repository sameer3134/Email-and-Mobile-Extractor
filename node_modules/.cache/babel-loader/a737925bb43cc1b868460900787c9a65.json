{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ESDC\\\\Desktop\\\\Extractor-main\\\\src\\\\compoents\\\\TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const extractEmails = () => {\n    console.log(\"extracted emails\" + text);\n    let newText = text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\n    setText(newText);\n    props.showalert(\"Email extracted\", \"Success\");\n  };\n\n  const extractmbile = () => {\n    const reg = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g;\n\n    const newText = value => value && value.match(reg);\n\n    setText(newText === 'null' ? \"\" : newText);\n    props.showalert(\"Mobile no. extracted\", \"Success\");\n  };\n\n  const clear = () => {\n    setText(\"\");\n    props.showalert(\"Text Clear\", \"Success\");\n  };\n\n  const handleOnChange = event => {\n    console.log(\"on change\");\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState('Enter text here');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: props.mode === 'dark' ? 'white' : '#000000'\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.Heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"emybox\",\n          rows: \"8\",\n          style: {\n            background: props.mode === 'dark' ? '#04070f' : 'white',\n            color: props.mode === 'dark' ? 'white' : '#000000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mx-2 my-3\",\n          onClick: extractEmails,\n          children: \"email extractor \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mx-2 my-3\",\n          onClick: extractmbile,\n          children: \"Mobile no. extractor \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mx-2 my-3\",\n          onClick: clear,\n          children: \"Clear \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(TextForm, \"3SkFjrn2ucpyzrB0FJHiV9CSQT4=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["C:/Users/ESDC/Desktop/Extractor-main/src/compoents/TextForm.js"],"names":["React","useState","TextForm","props","extractEmails","console","log","text","newText","match","setText","showalert","extractmbile","reg","value","clear","handleOnChange","event","target","color","mode","Heading","background"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEpC,QAAMC,aAAa,GAAE,MAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAoBC,IAAhC;AACA,QAAIC,OAAO,GAAED,IAAI,CAACE,KAAL,CAAW,sDAAX,CAAb;AACAC,IAAAA,OAAO,CAACF,OAAD,CAAP;AACAL,IAAAA,KAAK,CAACQ,SAAN,CAAgB,iBAAhB,EAAmC,SAAnC;AACH,GALD;;AAMA,QAAMC,YAAY,GAAE,MAAI;AACpB,UAAMC,GAAG,GAAG,wIAAZ;;AACA,UAAML,OAAO,GAAGM,KAAK,IAAIA,KAAK,IAAIA,KAAK,CAACL,KAAN,CAAYI,GAAZ,CAAlC;;AACAH,IAAAA,OAAO,CAACF,OAAO,KAAG,MAAV,GAAiB,EAAjB,GAAoBA,OAArB,CAAP;AACAL,IAAAA,KAAK,CAACQ,SAAN,CAAgB,sBAAhB,EAAwC,SAAxC;AACH,GALD;;AAQA,QAAMI,KAAK,GAAE,MAAI;AAEbL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAP,IAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAhB,EAA8B,SAA9B;AACH,GAJD;;AAMA,QAAMK,cAAc,GAAGC,KAAD,IAAS;AAC3BZ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAI,IAAAA,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAP;AAEH,GAJD;;AAKA,QAAM,CAACP,IAAD,EAAOG,OAAP,IAAkBT,QAAQ,CAAC,iBAAD,CAAhC;AACA,sBACI;AAAA,2BAEA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACG;AAAK,QAAA,KAAK,EAAE;AAACkB,UAAAA,KAAK,EAAChB,KAAK,CAACiB,IAAN,KAAa,MAAb,GAAoB,OAApB,GAA4B;AAAnC,SAAZ;AAAA,qCAA4D;AAAA,oBAAKjB,KAAK,CAACkB;AAAX;AAAA;AAAA;AAAA;AAAA,gBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCAEA;AAAU,UAAA,SAAS,EAAC,cAApB;AAAmC,UAAA,KAAK,EAAEd,IAA1C;AAAgD,UAAA,QAAQ,EAAES,cAA1D;AAA0E,UAAA,EAAE,EAAC,QAA7E;AAAsF,UAAA,IAAI,EAAC,GAA3F;AAA+F,UAAA,KAAK,EAAE;AAACM,YAAAA,UAAU,EAACnB,KAAK,CAACiB,IAAN,KAAa,MAAb,GAAoB,SAApB,GAA8B,OAA1C;AAAmDD,YAAAA,KAAK,EAAChB,KAAK,CAACiB,IAAN,KAAa,MAAb,GAAoB,OAApB,GAA4B;AAArF;AAAtG;AAAA;AAAA;AAAA;AAAA,gBAFA,eAIA;AAAS,UAAA,SAAS,EAAC,2BAAnB;AAA+C,UAAA,OAAO,EAAEhB,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAQ,UAAA,SAAS,EAAC,2BAAlB;AAA8C,UAAA,OAAO,EAAEQ,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAMA;AAAQ,UAAA,SAAS,EAAC,2BAAlB;AAA8C,UAAA,OAAO,EAAEG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA,mBADJ;AAiBH;;GA7CuBb,Q;;KAAAA,Q","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const extractEmails= ()=>{\r\n        console.log(\"extracted emails\"+ text);\r\n        let newText= text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\r\n        setText(newText)\r\n        props.showalert(\"Email extracted\", \"Success\")\r\n    }\r\n    const extractmbile= ()=>{\r\n        const reg = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g\r\n        const newText = value => value && value.match(reg)\r\n        setText(newText==='null'?\"\":newText)\r\n        props.showalert(\"Mobile no. extracted\", \"Success\")\r\n    }\r\n       \r\n    \r\n    const clear= ()=>{\r\n       \r\n        setText(\"\")\r\n        props.showalert(\"Text Clear\", \"Success\")\r\n    }\r\n    \r\n    const handleOnChange= (event)=>{\r\n        console.log(\"on change\");\r\n        setText(event.target.value)\r\n        \r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n    return (\r\n        <>\r\n     \r\n        <div className='container my-2' >\r\n           <div style={{color:props.mode==='dark'?'white':'#000000'}}> <h1>{props.Heading}</h1></div>\r\n            <div className=\"mb-3\">\r\n           \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"emybox\" rows=\"8\" style={{background:props.mode==='dark'?'#04070f':'white', color:props.mode==='dark'?'white':'#000000'}}></textarea>\r\n            \r\n            <button  className=\"btn btn-primary mx-2 my-3\" onClick={extractEmails}>email extractor </button>\r\n            <button className=\"btn btn-primary mx-2 my-3\" onClick={extractmbile}>Mobile no. extractor </button>\r\n            <button className=\"btn btn-primary mx-2 my-3\" onClick={clear}>Clear </button>\r\n          \r\n        </div>\r\n        \r\n        </div></>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}